name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Solidity Tests
  solidity-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npx hardhat compile

      - name: Run tests
        run: npx hardhat test

  # Python Tests
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run linting
        run: |
          poetry run ruff check src tests
          poetry run black --check src tests

      - name: Run type checking
        run: poetry run mypy src

      - name: Run tests
        run: poetry run pytest tests/unit --cov=src

  # Integration Tests
  integration-tests:
    runs-on: ubuntu-latest
    needs: [solidity-tests, python-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Node dependencies
        run: npm ci

      - name: Install Python dependencies
        run: poetry install --no-interaction

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d hardhat
          sleep 10  # Wait for Hardhat to be ready

      - name: Deploy contracts
        run: |
          npx hardhat run scripts/setup_dev.js --network localhost
          echo "TICKET_CONTRACT_ADDRESS=$(cat data/deployment.json | grep -o '"contractAddress":"[^"]*' | grep -o '[^"]*$')" >> $GITHUB_ENV

      - name: Start API server
        run: |
          poetry run uvicorn src.api.main:app --host 0.0.0.0 --port 8000 &
          sleep 5  # Wait for API to start

      - name: Run integration tests
        run: poetry run pytest tests/integration -v

      - name: Stop services
        if: always()
        run: docker-compose down

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."

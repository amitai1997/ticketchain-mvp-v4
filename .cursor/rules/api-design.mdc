---
description:
globs:
alwaysApply: true
---
**Endpoints & Resources**

* Design URIs around nouns, not verbs.
* Keep paths lowercase, kebab-case, plurals for collections.
* Nest resources only one level deep.
* Support filtering and pagination via query parameters.
* Avoid overloading endpoints with unrelated concerns.

**HTTP Semantics**

* Use standard verbs: GET, POST, PUT, PATCH, DELETE.
* Make GET safe and idempotent; PUT idempotent.
* Return proper status codes; prefer 4xx over 200 error payloads.
* Include Location header on resource creation.

**Payloads & Formats**

* Default to JSON; specify `application/json` Content-Type.
* Use consistent snake\_case or camelCase field names.
* Omit nulls; provide defaults when sensible.
* Document error envelope with code, message, details.
* Provide example requests/responses in docs.

**Versioning & Stability**

* Embed version in URI (`/v1/`) or header.
* Bump major only for breaking changes.
* Deprecate endpoints with sunset header and timeline.
* Maintain backward compatibility for at least one cycle.

**Security & Performance**

* Require TLS for all production traffic.
* Rateâ€‘limit clients and expose quota headers.
* Compress responses with gzip or brotli.

---
description:
globs:
alwaysApply: true
---
**Structure**
* Start project with `src/`, `tests/`, `docs/`, and `infra/` directories.
* Place executable entry points inside `cmd/` or `bin/`.
* Keep third-party patches under `vendor/`, outside `src/`.
* Separate runtime data into `data/`, excluded from version control.
* Use `/deploy` for Docker, scripts, and manifests.

**Naming**
* Name directories lowercase, kebab-case or snake_case consistently.
* Reserve `internal/` for non-public code.
* Avoid generic names like `utils`; prefer descriptive domain terms.
* Use plural nouns for collection folders, singular for leaf modules.

**Modularity**
* Organize code by feature before technical layer.
* Limit any directory to roughly fifteen files.
* Prefix private submodules with `_` or use `.internal` suffix.
* Extract reusable libraries into top-level `libs/`.

**Testing & CI**
* Mirror `src/` hierarchy under `tests/` for one-to-one mapping.
* Store test fixtures in `tests/fixtures/` separate from test code.
* Keep CI pipelines in `.ci/` or `.github/workflows/`.

**Documentation**
* Place `README.md`, `LICENSE`, `CHANGELOG.md` at repository root.
* Add `CODEOWNERS` to clarify maintainership.
* Provide folder-level READMEs for complex directories.
* Track environment variables with `.env.example` template.
"""
file_path = '/mnt/data/directory-sturcture-cursor-rules.md'
with open(file_path, 'w') as f:
    f.write(content)
file_path
